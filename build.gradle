buildscript {
	ext {
		kotlinVersion = '1.2.71'
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

//apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'net.piotrturski.shop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}


//sourceSets.main.java.srcDirs = ['src/main/kotlin']
//sourceSets.test.java.srcDirs = ['src/test/kotlin']

ext['springCloudVersion'] = 'Greenwich.M3'

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
//	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
//	implementation('org.springframework.boot:spring-boot-starter-jdbc')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
//	implementation('org.flywaydb:flyway-core')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")

	implementation("io.springfox:springfox-swagger-ui:2.9.2")
	implementation("io.springfox:springfox-swagger2:2.9.2")
	implementation "org.hibernate.validator:hibernate-validator"

//	implementation 'cz.jirutka.spring:spring-rest-exception-handler:1.2.0'
//	runtimeOnly('org.postgresql:postgresql')
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.projectreactor:reactor-test')

//	testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
	testImplementation 'com.googlecode.zohhak:zohhak:1.1.1'

	testImplementation platform('org.junit:junit-bom:5.3.2')

	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

//sourceSets {
//	test.java.srcDirs = []
//	test.kotlin.srcDirs = ['test/main/java', 'test/main/kotlin']

//	main.java.srcDirs = []
//	main.kotlin.srcDirs = ['src/main/java', 'src/main/kotlin']
//	main.resources.srcDirs = ['src/main/resources']
//}